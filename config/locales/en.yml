en:
  activerecord:
    errors:
      messages:
        restrict_dependent_destroy:
          has_one: "Cannot delete record because a dependent %{record} exists"
          has_many: "Cannot delete record because dependent %{record} exist"
    attributes:
      level:
        requirements: requirements
  grape:
    errors:
      format: ! "%{attributes} %{message}"
      messages:
        required: is missing
        blank: is empty
        employee:
          password:
            regexp: must be at least 8 characters, contains at least 1 special character, 1 number and 1 alphabet character
          email:
            regexp: is in an invalid format
      attributes:
        password: Password
        email: Email
        new_password: New password
        current_password: Current password
  api_error:
    wrong_email_password: "wrong email password"
    unauthorized: "unauthorized"
    unauthenticated: "unauthenticated"
    missing_params: "%{params} is missing"
    invalid_params: "Validation failed: %{params} is invalid"
    taken_params: "Validation failed: %{params} has already been taken"
    invalid_id: "Couldn't find %{model} with 'id'=%{id}"
    empty_params: "%{params} is empty"
    blank_params: "Validation failed: %{params} can't be blank"
    must_exist: "Validation failed: %{model} must exist"
    # Update ends on to start time
    validate_time: "Validation failed: Ends on must be after the starts on, Starts on must be after ends on previous sprint"
    invalid: "%{params} is invalid"
    wrong_current_password: "wrong current password"
    invalid_email_token: "Verify token is invalid or has been expired"
    name_taken: "Name has already been taken"
  models:
  delete_success: "Delete successfully"
  log_out: "You have been logged out"
  success: "Success"
